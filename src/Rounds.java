import java.util.ArrayList;
import java.util.List;
/**
* The rounds class if for handling the number of rounds in the game. 
* As per assignment, here's the description : 
* The Rounds class will specify the attributes and behaviours of 
* all the rounds within the game.
* @author (your name)
* @version (a version number or a date)
*/
public class Rounds
{
    int maxPegsPerRound;
    int maxRounds = 10;
    
    // pegs of all colors
    ColorGrid allColorGrid;
    
    // random grid generated by computer
    ColorGrid computerColorGrid;
    
    // list of guesses user makes
    ArrayList<ColorGrid> roundGuesses;
    
    // list of all colors
    List<String> allColors;
    
    /**
    * Class constructor
    */
    Rounds()
    {
        FileIO fileObject = new FileIO();
        this.maxPegsPerRound = fileObject.getMaxPegs();
        allColors = fileObject.getColorsInFile();
        allColorGrid = new ColorGrid(allColors.size());
        allColorGrid.createColorGrid(allColors);
        computerColorGrid = createComputerGrid();
    }
    
    /**
     * return maxRounds
     */
    public int getMaxRounds()
    {
        return maxRounds;
    }
    
    /**
     * Function returns all colors
     */
    public List<String> getAllColors()
    {
       return allColors;
    }
    
    /**
     * return maxRounds
     */
    public int getMaxPegsPerRound()
    {
        return maxPegsPerRound;
    }
    
    public ColorGrid createComputerGrid()
    {
        ColorGrid colorgrid = new ColorGrid(maxPegsPerRound);
        RNG random = new RNG(allColors.size()-1);
        // get random values of color
        // get color and value at random values
        for (int i=0; i<maxPegsPerRound; i++)
        {
            int randomNumber = random.generateRandomNumber();
            Peg peg = allColorGrid.pegs.get(randomNumber);
            colorgrid.addPeg(peg);
        }
        return colorgrid;
    }
    
    /** 
     * 
     */
    public boolean writeGuessessToFile()
    {
        return true;
    }
    
    public ArrayList<Integer> getScoreAddGuess(ArrayList<String> colors)
    {
        int score = 0;
        int allCorrect = 1;
        ArrayList<Integer> response = new ArrayList<Integer>();
        ColorGrid guesses = new ColorGrid(colors.size());
        for (int i = 0; i<colors.size(); i++)
        {
           ArrayList<Peg> pegs = computerColorGrid.getPegs();
           for (int j=0; j<computerColorGrid.getNumberOfPegs();j++)
           {
               String userColor = colors.get(j);
               String pegColor = pegs.get(j).getColor();
               if (userColor.equalsIgnoreCase(pegColor)) {
                   // good add score
                   score += pegs.get(j).getValue();
                   allCorrect = allCorrect*1;
               }
               allCorrect = allCorrect*0;
           }
        }
        response.add(score);
        response.add(allCorrect);
        return response;
    }    
}
